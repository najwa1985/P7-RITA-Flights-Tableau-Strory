<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.1103.1137                               -->
<workbook original-version='10.4' source-build='10.4.1 (10400.17.1103.1137)' source-platform='win' version='10.4' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='FlightStory2' path='/workbooks' revision='1.5' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.4'>
      <aliases enabled='yes' />
      <column caption='TOP N' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
        <range granularity='1.0' max='100000000.0' min='1.0' />
      </column>
    </datasource>
    <datasource caption='2008 (1)' inline='true' name='federated.15ggoa306oaaf716767ke191tnta' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2008 (1)' name='textscan.0p68n151lyk7xm134j32p18ba36e'>
            <connection class='textscan' directory='C:/Users/U S B/Documents/Udacity -Data Analyst prooject/P7 RITA Flights Tableau Strory' filename='2008 (1).csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='carriers' name='excel-direct.01zp3lr0a5826x17mqutb1jxfpxw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/U S B/Documents/Udacity -Data Analyst prooject/P7 RITA Flights Tableau Strory/carriers.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='airports code' name='excel-direct.1kuy8bt0h8wti819h1hb81trn44r'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/U S B/Documents/Udacity -Data Analyst prooject/P7 RITA Flights Tableau Strory/airports code.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[2008 (1).csv].[Dest]' />
              <expression op='[ورقة12].[IATA]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[2008 (1).csv].[Origin]' />
                <expression op='[ورقة11].[IATA]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[2008 (1).csv].[UniqueCarrier]' />
                  <expression op='[ورقة1].[Code]' />
                </expression>
              </clause>
              <relation connection='textscan.0p68n151lyk7xm134j32p18ba36e' name='2008 (1).csv' table='[2008 (1)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='date' date-parse-format='MM' name='Month' ordinal='1' />
                  <column datatype='integer' name='DayofMonth' ordinal='2' />
                  <column datatype='integer' name='DayOfWeek' ordinal='3' />
                  <column datatype='integer' name='DepTime' ordinal='4' />
                  <column datatype='integer' name='CRSDepTime' ordinal='5' />
                  <column datatype='integer' name='ArrTime' ordinal='6' />
                  <column datatype='integer' name='CRSArrTime' ordinal='7' />
                  <column datatype='string' name='UniqueCarrier' ordinal='8' />
                  <column datatype='integer' name='FlightNum' ordinal='9' />
                  <column datatype='string' name='TailNum' ordinal='10' />
                  <column datatype='integer' name='ActualElapsedTime' ordinal='11' />
                  <column datatype='integer' name='CRSElapsedTime' ordinal='12' />
                  <column datatype='integer' name='AirTime' ordinal='13' />
                  <column datatype='integer' name='ArrDelay' ordinal='14' />
                  <column datatype='integer' name='DepDelay' ordinal='15' />
                  <column datatype='string' name='Origin' ordinal='16' />
                  <column datatype='string' name='Dest' ordinal='17' />
                  <column datatype='integer' name='Distance' ordinal='18' />
                  <column datatype='integer' name='TaxiIn' ordinal='19' />
                  <column datatype='integer' name='TaxiOut' ordinal='20' />
                  <column datatype='integer' name='Cancelled' ordinal='21' />
                  <column datatype='string' name='CancellationCode' ordinal='22' />
                  <column datatype='integer' name='Diverted' ordinal='23' />
                  <column datatype='integer' name='CarrierDelay' ordinal='24' />
                  <column datatype='integer' name='WeatherDelay' ordinal='25' />
                  <column datatype='integer' name='NASDelay' ordinal='26' />
                  <column datatype='integer' name='SecurityDelay' ordinal='27' />
                  <column datatype='integer' name='LateAircraftDelay' ordinal='28' />
                </columns>
              </relation>
              <relation connection='excel-direct.01zp3lr0a5826x17mqutb1jxfpxw' name='ورقة1' table='[ورقة1$]' type='table'>
                <columns gridOrigin='A1:B1047:no:A1:B1047:0' header='yes' outcome='2'>
                  <column datatype='string' name='Airline' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.1kuy8bt0h8wti819h1hb81trn44r' name='ورقة11' table='[ورقة1$]' type='table'>
              <columns gridOrigin='A1:B2237:no:A1:B2237:0' header='yes' outcome='6'>
                <column datatype='string' name='Airport Name &amp; City' ordinal='0' />
                <column datatype='string' name='IATA' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1kuy8bt0h8wti819h1hb81trn44r' name='ورقة12' table='[ورقة1$]' type='table'>
            <columns gridOrigin='A1:B2237:no:A1:B2237:0' header='yes' outcome='6'>
              <column datatype='string' name='Airport Name &amp; City' ordinal='0' />
              <column datatype='string' name='IATA' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ActualElapsedTime]' value='[2008 (1).csv].[ActualElapsedTime]' />
          <map key='[AirTime]' value='[2008 (1).csv].[AirTime]' />
          <map key='[Airline]' value='[ورقة1].[Airline]' />
          <map key='[Airport Name &amp; City (ورقة12)]' value='[ورقة12].[Airport Name &amp; City]' />
          <map key='[Airport Name &amp; City]' value='[ورقة11].[Airport Name &amp; City]' />
          <map key='[ArrDelay]' value='[2008 (1).csv].[ArrDelay]' />
          <map key='[ArrTime]' value='[2008 (1).csv].[ArrTime]' />
          <map key='[CRSArrTime]' value='[2008 (1).csv].[CRSArrTime]' />
          <map key='[CRSDepTime]' value='[2008 (1).csv].[CRSDepTime]' />
          <map key='[CRSElapsedTime]' value='[2008 (1).csv].[CRSElapsedTime]' />
          <map key='[CancellationCode]' value='[2008 (1).csv].[CancellationCode]' />
          <map key='[Cancelled]' value='[2008 (1).csv].[Cancelled]' />
          <map key='[CarrierDelay]' value='[2008 (1).csv].[CarrierDelay]' />
          <map key='[Code]' value='[ورقة1].[Code]' />
          <map key='[DayOfWeek]' value='[2008 (1).csv].[DayOfWeek]' />
          <map key='[DayofMonth]' value='[2008 (1).csv].[DayofMonth]' />
          <map key='[DepDelay]' value='[2008 (1).csv].[DepDelay]' />
          <map key='[DepTime]' value='[2008 (1).csv].[DepTime]' />
          <map key='[Dest]' value='[2008 (1).csv].[Dest]' />
          <map key='[Distance]' value='[2008 (1).csv].[Distance]' />
          <map key='[Diverted]' value='[2008 (1).csv].[Diverted]' />
          <map key='[FlightNum]' value='[2008 (1).csv].[FlightNum]' />
          <map key='[IATA (ورقة12)]' value='[ورقة12].[IATA]' />
          <map key='[IATA]' value='[ورقة11].[IATA]' />
          <map key='[LateAircraftDelay]' value='[2008 (1).csv].[LateAircraftDelay]' />
          <map key='[Month]' value='[2008 (1).csv].[Month]' />
          <map key='[NASDelay]' value='[2008 (1).csv].[NASDelay]' />
          <map key='[Origin]' value='[2008 (1).csv].[Origin]' />
          <map key='[SecurityDelay]' value='[2008 (1).csv].[SecurityDelay]' />
          <map key='[TailNum]' value='[2008 (1).csv].[TailNum]' />
          <map key='[TaxiIn]' value='[2008 (1).csv].[TaxiIn]' />
          <map key='[TaxiOut]' value='[2008 (1).csv].[TaxiOut]' />
          <map key='[UniqueCarrier]' value='[2008 (1).csv].[UniqueCarrier]' />
          <map key='[WeatherDelay]' value='[2008 (1).csv].[WeatherDelay]' />
          <map key='[Year]' value='[2008 (1).csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DayofMonth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DayofMonth]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>DayofMonth</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DayOfWeek</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DayOfWeek]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>DayOfWeek</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepTime]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>DepTime</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSDepTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSDepTime]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>CRSDepTime</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrTime]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>ArrTime</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSArrTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSArrTime]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>CRSArrTime</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UniqueCarrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UniqueCarrier]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>UniqueCarrier</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightNum</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FlightNum]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>FlightNum</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TailNum</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TailNum]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>TailNum</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActualElapsedTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActualElapsedTime]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>ActualElapsedTime</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSElapsedTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSElapsedTime]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>CRSElapsedTime</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AirTime]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>AirTime</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrDelay]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>ArrDelay</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepDelay]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>DepDelay</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Origin]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>Origin</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dest</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Dest]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>Dest</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Distance]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>Distance</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiIn</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TaxiIn]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>TaxiIn</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiOut</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TaxiOut]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>TaxiOut</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cancelled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cancelled]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>Cancelled</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CancellationCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CancellationCode]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>CancellationCode</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diverted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Diverted]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>Diverted</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CarrierDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CarrierDelay]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>CarrierDelay</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WeatherDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WeatherDelay]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>WeatherDelay</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NASDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NASDelay]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>NASDelay</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SecurityDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SecurityDelay]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>SecurityDelay</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LateAircraftDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LateAircraftDelay]</local-name>
            <parent-name>[2008 (1).csv]</parent-name>
            <remote-alias>LateAircraftDelay</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airline</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Airline]</local-name>
            <parent-name>[ورقة1]</parent-name>
            <remote-alias>Airline</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[ورقة1]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ورقة1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B1047:no:A1:B1047:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport Name &amp; City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Airport Name &amp; City]</local-name>
            <parent-name>[ورقة11]</parent-name>
            <remote-alias>Airport Name &amp; City</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IATA</remote-name>
            <remote-type>130</remote-type>
            <local-name>[IATA]</local-name>
            <parent-name>[ورقة11]</parent-name>
            <remote-alias>IATA</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ورقة11]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B2237:no:A1:B2237:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport Name &amp; City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Airport Name &amp; City (ورقة12)]</local-name>
            <parent-name>[ورقة12]</parent-name>
            <remote-alias>Airport Name &amp; City</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IATA</remote-name>
            <remote-type>130</remote-type>
            <local-name>[IATA (ورقة12)]</local-name>
            <parent-name>[ورقة12]</parent-name>
            <remote-alias>IATA</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ورقة12]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B2237:no:A1:B2237:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Actual Elapsed Time' datatype='integer' name='[ActualElapsedTime]' role='measure' type='quantitative' />
      <column caption='Air Time' datatype='integer' name='[AirTime]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[Airline]' role='dimension' type='nominal' />
      <column caption='Dest AIrport' datatype='string' name='[Airport Name &amp; City (ورقة12)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Origin Airport' datatype='string' name='[Airport Name &amp; City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
      <column caption='Arr Time' datatype='integer' name='[ArrTime]' role='measure' type='quantitative' />
      <column caption='CRS Arr Time' datatype='integer' name='[CRSArrTime]' role='measure' type='quantitative' />
      <column caption='CRS Dep Time' datatype='integer' name='[CRSDepTime]' role='measure' type='quantitative' />
      <column caption='CRS Elapsed Time' datatype='integer' name='[CRSElapsedTime]' role='measure' type='quantitative' />
      <column caption='Delayed' datatype='string' name='[Calculation_1678153835755048960]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='iif(([DepDelay]&gt;0 OR [ArrDelay]&gt;0 ) AND (  NOT ISNULL([DepDelay]) AND  NOT ISNULL([ArrDelay])),&quot;Delayed&quot;,&quot;On Time&quot;)' />
      </column>
      <column caption='Day Week' datatype='string' name='[Calculation_1678153835760971778]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [DayOfWeek] WHEN 1 then &quot;Mon&quot;&#13;&#10;WHEN 2 then &quot;Tue&quot;&#13;&#10;WHEN 3 then &quot;Wed&quot;&#13;&#10;WHEN 4 then &quot;Thr&quot;&#13;&#10;WHEN 5 then &quot;Fri&quot;&#13;&#10;WHEN 6 then &quot;Sat&quot;&#13;&#10;WHEN 7 then &quot;Sun&quot;&#13;&#10;END' />
      </column>
      <column caption='Aircraft Delay' datatype='boolean' name='[Calculation_1678153835763154947]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='iif(([LateAircraftDelay]&gt;0 and not ISNULL([LateAircraftDelay])),True,False)' />
      </column>
      <column caption='Carr Delay' datatype='boolean' name='[Calculation_1678153835764318213]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='iif(([CarrierDelay]&gt;0 and not ISNULL([CarrierDelay])),True,False)' />
      </column>
      <column caption='NASDelay' datatype='boolean' name='[Calculation_1678153835764633606]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='iif(([NASDelay]&gt;0 and not ISNULL([NASDelay])),True,False)' />
      </column>
      <column caption='Sec Delay' datatype='boolean' name='[Calculation_1678153835764928519]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='iif(([SecurityDelay]&gt;0 and not ISNULL([SecurityDelay])),True,False)' />
      </column>
      <column caption='Weather Del' datatype='boolean' name='[Calculation_1678153835765145608]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='iif(([WeatherDelay]&gt;0 and not ISNULL([WeatherDelay])),True,False)' />
      </column>
      <column caption='Aircraft &amp; Carrier Delay' datatype='boolean' name='[Calculation_1678153835769094153]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='iif(([Calculation_1678153835763154947] OR [Calculation_1678153835764318213]),TRUE,False)' />
      </column>
      <column caption='NAS , Security &amp; Weather Delay' datatype='boolean' name='[Calculation_1678153835769798666]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IIF(([Calculation_1678153835764633606] OR [Calculation_1678153835764928519] Or [Calculation_1678153835765145608]),True,False)' />
      </column>
      <column caption='Max Delay' datatype='integer' name='[Calculation_1678153835797917709]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max(Max(&#13;&#10;MAX([SecurityDelay],[NASDelay]),&#13;&#10;max([SecurityDelay],[CarrierDelay])),[LateAircraftDelay])' />
      </column>
      <column caption='Delay Type' datatype='string' name='[Calculation_1678153835799740430]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='iif(([Calculation_1678153835797917709]==0 or ISNULL([Calculation_1678153835797917709])),&apos;No Delay&apos;,iif([SecurityDelay]==[Calculation_1678153835797917709],&quot;Security Delay&quot;,&#13;&#10;iif([WeatherDelay]==[Calculation_1678153835797917709],&quot;Weather Delay&quot;,&#13;&#10;iif([CarrierDelay]==[Calculation_1678153835797917709],&quot;Carrier Delay&quot;,&#13;&#10;iif([LateAircraftDelay]==[Calculation_1678153835797917709],&quot;Late Aircraft Delay&quot;,&#13;&#10;iif([NASDelay]==[Calculation_1678153835797917709],&quot;NAS Delay&quot;,&#13;&#10;iif([SecurityDelay]==[Calculation_1678153835797917709],&quot;Security Delay&quot;,&quot;No Delay&quot;)&#13;&#10;)&#13;&#10;)&#13;&#10;))&#13;&#10;))' />
      </column>
      <column caption='Cancellation Code' datatype='string' name='[CancellationCode]' role='dimension' type='nominal' />
      <column caption='Carrier Delay' datatype='integer' name='[CarrierDelay]' role='dimension' type='ordinal' />
      <column caption='Day Of Week' datatype='integer' name='[DayOfWeek]' role='dimension' type='quantitative' />
      <column caption='Dayof Month' datatype='integer' name='[DayofMonth]' role='dimension' type='quantitative' />
      <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
      <column caption='Dep Time' datatype='integer' name='[DepTime]' role='measure' type='quantitative' />
      <column datatype='string' name='[Dest]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column caption='Flight Num' datatype='integer' name='[FlightNum]' role='dimension' type='ordinal' />
      <column caption='Iata (ورقة12)' datatype='string' name='[IATA (ورقة12)]' role='dimension' type='nominal' />
      <column caption='Iata' datatype='string' name='[IATA]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column caption='Late Aircraft Delay' datatype='integer' name='[LateAircraftDelay]' role='dimension' type='ordinal' />
      <column datatype='date' name='[Month]' role='dimension' type='quantitative' />
      <column caption='NAS Delay' datatype='integer' name='[NASDelay]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column caption='Security Delay' datatype='integer' name='[SecurityDelay]' role='dimension' type='ordinal' />
      <column caption='Tail Num' datatype='string' name='[TailNum]' role='dimension' type='nominal' />
      <column caption='Taxi In' datatype='integer' name='[TaxiIn]' role='measure' type='quantitative' />
      <column caption='Taxi Out' datatype='integer' name='[TaxiOut]' role='measure' type='quantitative' />
      <column caption='Unique Carrier' datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
      <column caption='Weather Delay' datatype='integer' name='[WeatherDelay]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_1678153835755048960]' derivation='None' name='[none:Calculation_1678153835755048960:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1678153835799740430]' derivation='None' name='[none:Calculation_1678153835799740430:nk]' pivot='key' type='nominal' />
      <column-instance column='[Dest]' derivation='None' name='[none:Dest:nk]' pivot='key' type='nominal' />
      <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
      <column-instance column='[UniqueCarrier]' derivation='None' name='[none:UniqueCarrier:nk]' pivot='key' type='nominal' />
      <group name='[Delayed Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='[Calculation_1678153835755048960]==&quot;Delayed&quot;' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
            <groupfilter function='level-members' level='[Calculation_1678153835755048960]' />
            <groupfilter function='member' level='[Calculation_1678153835755048960]' member='&quot;On Time&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='member' level='[Calculation_1678153835755048960]' member='&quot;Delayed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/U S B/Documents/Udacity -Data Analyst prooject/P7 RITA Flights Tableau Strory/2008 (1).tde' schema='Extract' tablename='Extract' update-time='02/08/2019 03:58:10 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[ActualElapsedTime]' value='[Extract].[ActualElapsedTime]' />
            <map key='[AirTime]' value='[Extract].[AirTime]' />
            <map key='[Airline]' value='[Extract].[Airline]' />
            <map key='[Airport Name &amp; City (ورقة12)]' value='[Extract].[Airport Name &amp; City]' />
            <map key='[Airport Name &amp; City]' value='[Extract].[Airport Name &amp; City1]' />
            <map key='[ArrDelay]' value='[Extract].[ArrDelay]' />
            <map key='[ArrTime]' value='[Extract].[ArrTime]' />
            <map key='[CRSArrTime]' value='[Extract].[CRSArrTime]' />
            <map key='[CRSDepTime]' value='[Extract].[CRSDepTime]' />
            <map key='[CRSElapsedTime]' value='[Extract].[CRSElapsedTime]' />
            <map key='[Calculation_1678153835755048960]' value='[Extract].[Calculation_1678153835755048960]' />
            <map key='[Calculation_1678153835760971778]' value='[Extract].[Calculation_1678153835760971778]' />
            <map key='[Calculation_1678153835763154947]' value='[Extract].[Calculation_1678153835763154947]' />
            <map key='[Calculation_1678153835764318213]' value='[Extract].[Calculation_1678153835764318213]' />
            <map key='[Calculation_1678153835764633606]' value='[Extract].[Calculation_1678153835764633606]' />
            <map key='[Calculation_1678153835764928519]' value='[Extract].[Calculation_1678153835764928519]' />
            <map key='[Calculation_1678153835765145608]' value='[Extract].[Calculation_1678153835765145608]' />
            <map key='[Calculation_1678153835769094153]' value='[Extract].[Calculation_1678153835769094153]' />
            <map key='[Calculation_1678153835769798666]' value='[Extract].[Calculation_1678153835769798666]' />
            <map key='[Calculation_1678153835797917709]' value='[Extract].[Calculation_1678153835797917709]' />
            <map key='[Calculation_1678153835799740430]' value='[Extract].[Calculation_1678153835799740430]' />
            <map key='[CancellationCode]' value='[Extract].[CancellationCode]' />
            <map key='[Cancelled]' value='[Extract].[Cancelled]' />
            <map key='[CarrierDelay]' value='[Extract].[CarrierDelay]' />
            <map key='[Code]' value='[Extract].[Code]' />
            <map key='[DayOfWeek]' value='[Extract].[DayOfWeek]' />
            <map key='[DayofMonth]' value='[Extract].[DayofMonth]' />
            <map key='[DepDelay]' value='[Extract].[DepDelay]' />
            <map key='[DepTime]' value='[Extract].[DepTime]' />
            <map key='[Dest]' value='[Extract].[Dest]' />
            <map key='[Distance]' value='[Extract].[Distance]' />
            <map key='[Diverted]' value='[Extract].[Diverted]' />
            <map key='[FlightNum]' value='[Extract].[FlightNum]' />
            <map key='[IATA (ورقة12)]' value='[Extract].[IATA]' />
            <map key='[IATA]' value='[Extract].[IATA1]' />
            <map key='[LateAircraftDelay]' value='[Extract].[LateAircraftDelay]' />
            <map key='[Month]' value='[Extract].[Month]' />
            <map key='[NASDelay]' value='[Extract].[NASDelay]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Origin]' value='[Extract].[Origin]' />
            <map key='[SecurityDelay]' value='[Extract].[SecurityDelay]' />
            <map key='[TailNum]' value='[Extract].[TailNum]' />
            <map key='[TaxiIn]' value='[Extract].[TaxiIn]' />
            <map key='[TaxiOut]' value='[Extract].[TaxiOut]' />
            <map key='[UniqueCarrier]' value='[Extract].[UniqueCarrier]' />
            <map key='[WeatherDelay]' value='[Extract].[WeatherDelay]' />
            <map key='[Year]' value='[Extract].[Year]' />
          </cols>
          <calculations>
            <calculation column='[Calculation_1678153835755048960]' formula='iif(([DepDelay]&gt;0 OR [ArrDelay]&gt;0 ) AND (  NOT ISNULL([DepDelay]) AND  NOT ISNULL([ArrDelay])),&quot;Delayed&quot;,&quot;On Time&quot;)' />
            <calculation column='[Calculation_1678153835760971778]' formula='CASE [DayOfWeek] WHEN 1 then &quot;Mon&quot;&#13;&#10;WHEN 2 then &quot;Tue&quot;&#13;&#10;WHEN 3 then &quot;Wed&quot;&#13;&#10;WHEN 4 then &quot;Thr&quot;&#13;&#10;WHEN 5 then &quot;Fri&quot;&#13;&#10;WHEN 6 then &quot;Sat&quot;&#13;&#10;WHEN 7 then &quot;Sun&quot;&#13;&#10;END' />
            <calculation column='[Calculation_1678153835763154947]' formula='iif(([LateAircraftDelay]&gt;0 and not ISNULL([LateAircraftDelay])),True,False)' />
            <calculation column='[Calculation_1678153835764318213]' formula='iif(([CarrierDelay]&gt;0 and not ISNULL([CarrierDelay])),True,False)' />
            <calculation column='[Calculation_1678153835764633606]' formula='iif(([NASDelay]&gt;0 and not ISNULL([NASDelay])),True,False)' />
            <calculation column='[Calculation_1678153835764928519]' formula='iif(([SecurityDelay]&gt;0 and not ISNULL([SecurityDelay])),True,False)' />
            <calculation column='[Calculation_1678153835765145608]' formula='iif(([WeatherDelay]&gt;0 and not ISNULL([WeatherDelay])),True,False)' />
            <calculation column='[Calculation_1678153835769094153]' formula='iif(([Calculation_1678153835763154947] OR [Calculation_1678153835764318213]),TRUE,False)' />
            <calculation column='[Calculation_1678153835769798666]' formula='IIF(([Calculation_1678153835764633606] OR [Calculation_1678153835764928519] Or [Calculation_1678153835765145608]),True,False)' />
            <calculation column='[Calculation_1678153835797917709]' formula='max(Max(&#13;&#10;MAX([SecurityDelay],[NASDelay]),&#13;&#10;max([SecurityDelay],[CarrierDelay])),[LateAircraftDelay])' />
            <calculation column='[Calculation_1678153835799740430]' formula='iif(([Calculation_1678153835797917709]==0 or ISNULL([Calculation_1678153835797917709])),&apos;No Delay&apos;,iif([SecurityDelay]==[Calculation_1678153835797917709],&quot;Security Delay&quot;,&#13;&#10;iif([WeatherDelay]==[Calculation_1678153835797917709],&quot;Weather Delay&quot;,&#13;&#10;iif([CarrierDelay]==[Calculation_1678153835797917709],&quot;Carrier Delay&quot;,&#13;&#10;iif([LateAircraftDelay]==[Calculation_1678153835797917709],&quot;Late Aircraft Delay&quot;,&#13;&#10;iif([NASDelay]==[Calculation_1678153835797917709],&quot;NAS Delay&quot;,&#13;&#10;iif([SecurityDelay]==[Calculation_1678153835797917709],&quot;Security Delay&quot;,&quot;No Delay&quot;)&#13;&#10;)&#13;&#10;)&#13;&#10;))&#13;&#10;))' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='6950263' timestamp-start='2019-02-08 15:58:10.226' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ActualElapsedTime</remote-name>
              <remote-type>2</remote-type>
              <local-name>[ActualElapsedTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ActualElapsedTime</remote-alias>
              <ordinal>0</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>690</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>1379</statistic>
                <statistic aggregation='Count' datatype='integer'>6796454</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>26</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AirTime</remote-name>
              <remote-type>2</remote-type>
              <local-name>[AirTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AirTime</remote-alias>
              <ordinal>1</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>664</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>1350</statistic>
                <statistic aggregation='Count' datatype='integer'>6796454</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>25</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Airline</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Airline]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Airline</remote-alias>
              <ordinal>2</ordinal>
              <family>ورقة1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Airtran Airways&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;US Airways&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Airport Name &amp; City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Airport Name &amp; City (ورقة12)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Airport Name &amp; City</remote-alias>
              <ordinal>3</ordinal>
              <family>ورقة12</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>279</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Adak Island Ns Airport&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yuma International Airport&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Airport Name &amp; City1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Airport Name &amp; City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Airport Name &amp; City1</remote-alias>
              <ordinal>4</ordinal>
              <family>ورقة11</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>279</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Adak Island Ns Airport&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yuma International Airport&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrDelay</remote-name>
              <remote-type>2</remote-type>
              <local-name>[ArrDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrDelay</remote-alias>
              <ordinal>5</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1150</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>2461</statistic>
                <statistic aggregation='Count' datatype='integer'>6796454</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>29</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrTime</remote-name>
              <remote-type>2</remote-type>
              <local-name>[ArrTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrTime</remote-alias>
              <ordinal>6</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1441</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>2400</statistic>
                <statistic aggregation='Count' datatype='integer'>6799456</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>34</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CRSArrTime</remote-name>
              <remote-type>2</remote-type>
              <local-name>[CRSArrTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CRSArrTime</remote-alias>
              <ordinal>7</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1366</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>2400</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>31</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CRSDepTime</remote-name>
              <remote-type>2</remote-type>
              <local-name>[CRSDepTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CRSDepTime</remote-alias>
              <ordinal>8</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1207</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>2359</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>30</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CRSElapsedTime</remote-name>
              <remote-type>2</remote-type>
              <local-name>[CRSElapsedTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CRSElapsedTime</remote-alias>
              <ordinal>9</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>526</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>1435</statistic>
                <statistic aggregation='Count' datatype='integer'>6949424</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>24</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1678153835797917709</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Calculation_1678153835797917709]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1678153835797917709</remote-alias>
              <ordinal>10</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1011</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>2436</statistic>
                <statistic aggregation='Count' datatype='integer'>1509805</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>27</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CancellationCode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CancellationCode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CancellationCode</remote-alias>
              <ordinal>11</ordinal>
              <family>2008 (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;D&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>136742</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cancelled</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Cancelled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cancelled</remote-alias>
              <ordinal>12</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CarrierDelay</remote-name>
              <remote-type>2</remote-type>
              <local-name>[CarrierDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CarrierDelay</remote-alias>
              <ordinal>13</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>978</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>2436</statistic>
                <statistic aggregation='Count' datatype='integer'>1509805</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>14</ordinal>
              <family>ورقة1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;9E&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;YV&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DayOfWeek</remote-name>
              <remote-type>16</remote-type>
              <local-name>[DayOfWeek]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DayOfWeek</remote-alias>
              <ordinal>15</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>27262558.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.922521780830452</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>7</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.9879277036717833</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.9879275606608082</statistic>
                <statistic aggregation='Var' datatype='real'>3.9518565550257692</statistic>
                <statistic aggregation='VarP' datatype='real'>3.9518559864348317</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>134404416.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DayofMonth</remote-name>
              <remote-type>16</remote-type>
              <local-name>[DayofMonth]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DayofMonth</remote-alias>
              <ordinal>16</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>109309511.0</statistic>
                <statistic aggregation='Avg' datatype='real'>15.727392042574504</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>31</statistic>
                <statistic aggregation='Stdev' datatype='real'>8.796787944280327</statistic>
                <statistic aggregation='StdevP' datatype='real'>8.7967873114418111</statistic>
                <statistic aggregation='Var' datatype='real'>77.383478136635716</statistic>
                <statistic aggregation='VarP' datatype='real'>77.383467002743643</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2256988981.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepDelay</remote-name>
              <remote-type>2</remote-type>
              <local-name>[DepDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepDelay</remote-alias>
              <ordinal>17</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1132</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>2467</statistic>
                <statistic aggregation='Count' datatype='integer'>6814703</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>28</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepTime</remote-name>
              <remote-type>2</remote-type>
              <local-name>[DepTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepTime</remote-alias>
              <ordinal>18</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1433</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>2400</statistic>
                <statistic aggregation='Count' datatype='integer'>6814703</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>33</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dest</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Dest]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dest</remote-alias>
              <ordinal>19</ordinal>
              <family>2008 (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>297</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;YUM&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Distance</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Distance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Distance</remote-alias>
              <ordinal>20</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1413</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>11</statistic>
                <statistic aggregation='Max' datatype='integer'>4962</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>32</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Diverted</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Diverted]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Diverted</remote-alias>
              <ordinal>21</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FlightNum</remote-name>
              <remote-type>2</remote-type>
              <local-name>[FlightNum]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FlightNum</remote-alias>
              <ordinal>22</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7539</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>9743</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>IATA</remote-name>
              <remote-type>129</remote-type>
              <local-name>[IATA (ورقة12)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>IATA</remote-alias>
              <ordinal>23</ordinal>
              <family>ورقة12</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>297</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;YUM&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>IATA1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[IATA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>IATA1</remote-alias>
              <ordinal>24</ordinal>
              <family>ورقة11</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>296</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;YUM&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LateAircraftDelay</remote-name>
              <remote-type>2</remote-type>
              <local-name>[LateAircraftDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LateAircraftDelay</remote-alias>
              <ordinal>25</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>565</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>1316</statistic>
                <statistic aggregation='Count' datatype='integer'>1509805</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>26</ordinal>
              <family>2008 (1).csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2000-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2000-12-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
                <statistic aggregation='Median' datatype='date'>#2000-06-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NASDelay</remote-name>
              <remote-type>2</remote-type>
              <local-name>[NASDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NASDelay</remote-alias>
              <ordinal>27</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>575</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>1357</statistic>
                <statistic aggregation='Count' datatype='integer'>1509805</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>28</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Origin</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Origin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Origin</remote-alias>
              <ordinal>29</ordinal>
              <family>2008 (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>296</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;YUM&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SecurityDelay</remote-name>
              <remote-type>2</remote-type>
              <local-name>[SecurityDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SecurityDelay</remote-alias>
              <ordinal>30</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>392</statistic>
                <statistic aggregation='Count' datatype='integer'>1509805</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TailNum</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TailNum]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TailNum</remote-alias>
              <ordinal>31</ordinal>
              <family>2008 (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5367</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;80009E&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Unknow&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6867379</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TaxiIn</remote-name>
              <remote-type>2</remote-type>
              <local-name>[TaxiIn]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TaxiIn</remote-alias>
              <ordinal>32</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>191</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>308</statistic>
                <statistic aggregation='Count' datatype='integer'>6799456</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TaxiOut</remote-name>
              <remote-type>2</remote-type>
              <local-name>[TaxiOut]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TaxiOut</remote-alias>
              <ordinal>33</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>343</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>429</statistic>
                <statistic aggregation='Count' datatype='integer'>6813897</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>UniqueCarrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[UniqueCarrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>UniqueCarrier</remote-alias>
              <ordinal>34</ordinal>
              <family>2008 (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;9E&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;YV&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WeatherDelay</remote-name>
              <remote-type>2</remote-type>
              <local-name>[WeatherDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WeatherDelay</remote-alias>
              <ordinal>35</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>600</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>1352</statistic>
                <statistic aggregation='Count' datatype='integer'>1509805</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>36</ordinal>
              <family>2008 (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2008</statistic>
                <statistic aggregation='Max' datatype='integer'>2008</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
                <statistic aggregation='Median' datatype='integer'>2008</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1678153835755048960</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_1678153835755048960]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1678153835755048960</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>7</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Delayed&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;On Time&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>28</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1678153835760971778</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_1678153835760971778]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1678153835760971778</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>32</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Fri&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wed&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>128</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1678153835763154947</remote-name>
              <remote-type>11</remote-type>
              <local-name>[Calculation_1678153835763154947]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1678153835763154947</remote-alias>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1678153835764318213</remote-name>
              <remote-type>11</remote-type>
              <local-name>[Calculation_1678153835764318213]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1678153835764318213</remote-alias>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1678153835764633606</remote-name>
              <remote-type>11</remote-type>
              <local-name>[Calculation_1678153835764633606]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1678153835764633606</remote-alias>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1678153835764928519</remote-name>
              <remote-type>11</remote-type>
              <local-name>[Calculation_1678153835764928519]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1678153835764928519</remote-alias>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
                <statistic aggregation='Median' datatype='boolean'>true</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1678153835765145608</remote-name>
              <remote-type>11</remote-type>
              <local-name>[Calculation_1678153835765145608]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1678153835765145608</remote-alias>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1678153835769094153</remote-name>
              <remote-type>11</remote-type>
              <local-name>[Calculation_1678153835769094153]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1678153835769094153</remote-alias>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1678153835769798666</remote-name>
              <remote-type>11</remote-type>
              <local-name>[Calculation_1678153835769798666]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1678153835769798666</remote-alias>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1678153835799740430</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_1678153835799740430]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1678153835799740430</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>19</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Carrier Delay&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Weather Delay&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6950263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>76</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.509346' group-percentage='0.0537383' measure-ordering='alphabetic' measure-percentage='0.383178' parameter-percentage='0.0537383' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Origin:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ABQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AGS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DTW&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FLL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FNT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HRL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IYK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LWB&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LWS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OXR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RIC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RST&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SAV&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SBP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SPS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ALO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ATL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CAE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CMI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DAL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DHN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EYW&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FAI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GRK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LIT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LRD&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OKC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SCC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TUP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BTM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CHA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CWA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DBQ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DCA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DRO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GGG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LAX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MLB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MOB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PLN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PNS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PVD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SAT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;XNA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BLI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BOI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FLO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HHH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IDA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JAX&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KOA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LAW&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MFR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OAJ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OAK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PIH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SHV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SWF&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CLE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EVV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GSO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HDN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HTS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JNU&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MCN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MSY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OGG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RKS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SFO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SGU&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TWF&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TXK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ACT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ADQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BIL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CID&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ELM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FWA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GTR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ICT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MEM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PHX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PSC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RDM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SDF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WYS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BJI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BRO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BTV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GCC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GEG&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GJT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GTF&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HNL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HSV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MGM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MKG&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PMD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SEA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TUS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CIC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CMX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FAT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FCA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GNV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LCH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LEX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ORD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PIR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RNO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ROA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SAN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SMF&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VPS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WRG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ACK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ADK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ASE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BGM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BIS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BNA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CSG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FSM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JFK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MDT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MOT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PFN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PSP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RSW&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BFL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CAK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CRW&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HLN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IAH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MEI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MKE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MLU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RHI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ROW&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SIT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SJU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TLH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TPA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TYS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ABY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ACY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AEX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BUR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CHO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DSM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ITO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JAN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LNK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MSP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OTH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PIA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RAP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RDU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TYR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AKN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BDL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CLT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EKO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EWN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GRB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GRR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LMT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MCI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MFE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MOD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MYR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OME&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SBA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;STT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AMA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BOS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BRW&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CEC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CRP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DAY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FAY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GSP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GST&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MBS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OMA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SJC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;STX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TOL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;YUM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BET&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BUF&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BWI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HOU&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HPN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;INL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JAC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LFT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LGB&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PSG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PWM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SUN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TRI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;YKM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ANC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AVL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AVP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FSD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GPT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ITH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MSO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ONT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RDD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SCE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SLC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SPI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;STL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VLD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ATW&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BTR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CDC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ELP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FAR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FLG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GUC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IAD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ILM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LAS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MSN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MTJ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PIT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SJT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TEX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ACV&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BHM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BMI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CDV&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CPR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CVG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DFW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DLH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GFK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ISP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MQT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PUB&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RFD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ROC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SRQ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AZO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BQN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CLD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DAB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DLG&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LGA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MRY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ORF&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OTZ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PBI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PDX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SBN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BQK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CMH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EGE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EUG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EWR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KTN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LBB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LIH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LYH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MHT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MIA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SMX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SUX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TVC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ABI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BPT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BZN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CHS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CLL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IPL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LAN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LSE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MDW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PHF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SGF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SNA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TUL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;YAK&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1678153835799740430:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Carrier Delay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Weather Delay&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Security Delay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NAS Delay&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;No Delay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Late Aircraft Delay&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Dest:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ANC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BRO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BTR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CHA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CRP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EWR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JAN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MIA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MLB&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MSO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MSY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RHI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SMX&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;STX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ATL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BET&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BTV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BUF&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BZN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DAL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KTN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OAJ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PIR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RAP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RFD&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ROC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SBA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TRI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;YAK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AGS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BHM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CVG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EYW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HNL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IYK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LAX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LBB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LCH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MOB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PLN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RDD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RST&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SWF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;XNA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ABI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AVP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BIL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CIC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FAT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JAX&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LGA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LMT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MCI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MYR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ORF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RKS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TEX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ABY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ADK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BGM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CRW&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DHN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FLG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FNT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JAC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LGB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MEM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MKE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PSC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RIC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SFO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TLH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ABE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ABQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ACT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DCA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FCA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FSD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GFK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MGM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;OME&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PHX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PNS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PVD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SCC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WYS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BOS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BQK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DBQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;EVV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FSM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HPN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;INL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LSE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OKC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PFN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PMD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PWM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SMF&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;YKM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CHS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CMX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DLH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EGE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EKO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GUC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ITO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LFT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LIH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ORD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SAN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TUP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TUS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WRG&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;YUM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ASE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BNA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CDC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CLD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CWA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DSM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GJT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ITH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LAW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MDT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MSP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OMA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PSG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VLD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AEX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AZO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BQN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CID&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FAR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FLL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FWA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GGG&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GSO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HTS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LAS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MCN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PIT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ROW&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SDF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AKN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BFL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BOI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BRW&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BUR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CLE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EUG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GCC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GSP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HLN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JFK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LYH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MOD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RDM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SHV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AVL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BTM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DLG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GEG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HOU&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LRD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MBS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MQT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OTH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PBI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PIA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PSP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SLC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TOL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BIS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CLT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EWN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FAI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KOA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LNK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LWS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OGG&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OTZ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RDU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RSW&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SJT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;STT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SUX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VPS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BJI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BWI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DAY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DRO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ELM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GNV&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HSV&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IPL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LAN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MKG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SBP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SJC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SJU&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SRQ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TWF&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AMA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CEC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CMI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GRK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HRL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LWB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MHT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MTJ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OAK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ONT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OXR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SCE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TYR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TYS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ACK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ACY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ATW&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CAK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CSG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DAB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ELP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HDN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HHH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IAD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IAH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MFE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MSN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SPI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BPT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CLL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DFW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GTF&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ICT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IDA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LEX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MDW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MRY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ROA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SAT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SBN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TUL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ACV&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ADQ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BDL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BLI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BMI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GRB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GRR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ISP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MOT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PDX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SEA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SGU&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SIT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SUN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CDV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CMH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DTW&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GPT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GST&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LIT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MEI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MFR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MLU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SPS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;STL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TVC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TXK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ALO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CPR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FAY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FLO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GTR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ILM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JNU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PHF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PIH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RNO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SAV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SGF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SNA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TPA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1678153835755048960:nk]' type='palette'>
            <map to='#7b848f'>
              <bucket>&quot;Delayed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;On Time&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:UniqueCarrier:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;F9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B6&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NW&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;XE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;YV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AQ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MQ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Delayed Origin' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Delayed' />
        <param name='target' value='Delayed Origin' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Arr per Airport'>
      <table>
        <view>
          <datasources>
            <datasource caption='2008 (1)' name='federated.15ggoa306oaaf716767ke191tnta' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15ggoa306oaaf716767ke191tnta'>
            <column caption='Dest AIrport' datatype='string' name='[Airport Name &amp; City (ورقة12)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Dest]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Airport Name &amp; City (ورقة12)]' derivation='Attribute' name='[attr:Airport Name &amp; City (ورقة12):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dest]' derivation='None' name='[none:Dest:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]' included-values='in-range'>
            <min>2</min>
            <max>414521</max>
          </filter>
          <slices>
            <column>[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]' />
              <lod column='[federated.15ggoa306oaaf716767ke191tnta].[none:Dest:nk]' />
              <tooltip column='[federated.15ggoa306oaaf716767ke191tnta].[attr:Airport Name &amp; City (ورقة12):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15ggoa306oaaf716767ke191tnta].[Latitude (generated)]</rows>
        <cols>[federated.15ggoa306oaaf716767ke191tnta].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Arrival &amp; Departute Delay'>
      <table>
        <view>
          <datasources>
            <datasource caption='2008 (1)' name='federated.15ggoa306oaaf716767ke191tnta' />
          </datasources>
          <datasource-dependencies datasource='federated.15ggoa306oaaf716767ke191tnta'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Delayed' datatype='string' name='[Calculation_1678153835755048960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='iif(([DepDelay]&gt;0 OR [ArrDelay]&gt;0 ) AND (  NOT ISNULL([DepDelay]) AND  NOT ISNULL([ArrDelay])),&quot;Delayed&quot;,&quot;On Time&quot;)' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column-instance column='[ArrDelay]' derivation='None' name='[none:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1678153835755048960]' derivation='None' name='[none:Calculation_1678153835755048960:nk]' pivot='key' type='nominal' />
            <column-instance column='[DepDelay]' derivation='None' name='[none:DepDelay:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]'>
            <groupfilter function='member' level='[none:Calculation_1678153835755048960:nk]' member='&quot;Delayed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[none:ArrDelay:qk]' scope='rows' value='Arrival Delay' />
            <format attr='subtitle' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[none:ArrDelay:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[none:ArrDelay:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[none:DepDelay:qk]' scope='cols' value='Departure Delay' />
            <format attr='subtitle' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[none:DepDelay:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[none:DepDelay:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.15ggoa306oaaf716767ke191tnta].[none:ArrDelay:qk]</rows>
        <cols>[federated.15ggoa306oaaf716767ke191tnta].[none:DepDelay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Carrier Delayed'>
      <table>
        <view>
          <datasources>
            <datasource caption='2008 (1)' name='federated.15ggoa306oaaf716767ke191tnta' />
          </datasources>
          <datasource-dependencies datasource='federated.15ggoa306oaaf716767ke191tnta'>
            <column caption='Carrier' datatype='string' name='[Airline]' role='dimension' type='nominal' />
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Delayed' datatype='string' name='[Calculation_1678153835755048960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='iif(([DepDelay]&gt;0 OR [ArrDelay]&gt;0 ) AND (  NOT ISNULL([DepDelay]) AND  NOT ISNULL([ArrDelay])),&quot;Delayed&quot;,&quot;On Time&quot;)' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Unique Carrier' datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
            <column-instance column='[Airline]' derivation='Attribute' name='[attr:Airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1678153835755048960]' derivation='None' name='[none:Calculation_1678153835755048960:nk]' pivot='key' type='nominal' />
            <column-instance column='[UniqueCarrier]' derivation='None' name='[none:UniqueCarrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.15ggoa306oaaf716767ke191tnta].[none:UniqueCarrier:nk]' direction='DESC' using='[federated.15ggoa306oaaf716767ke191tnta].[sum:Number of Records:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[sum:Number of Records:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]' />
              <tooltip column='[federated.15ggoa306oaaf716767ke191tnta].[attr:Airline:nk]' />
              <text column='[federated.15ggoa306oaaf716767ke191tnta].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15ggoa306oaaf716767ke191tnta].[sum:Number of Records:qk]</rows>
        <cols>[federated.15ggoa306oaaf716767ke191tnta].[none:UniqueCarrier:nk]</cols>
        <percentages enabled='true' mode='column' />
      </table>
    </worksheet>
    <worksheet name='Carrier Delayed Percentage'>
      <table>
        <view>
          <datasources>
            <datasource caption='2008 (1)' name='federated.15ggoa306oaaf716767ke191tnta' />
          </datasources>
          <datasource-dependencies datasource='federated.15ggoa306oaaf716767ke191tnta'>
            <column caption='Carrier' datatype='string' name='[Airline]' role='dimension' type='nominal' />
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Delayed' datatype='string' name='[Calculation_1678153835755048960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='iif(([DepDelay]&gt;0 OR [ArrDelay]&gt;0 ) AND (  NOT ISNULL([DepDelay]) AND  NOT ISNULL([ArrDelay])),&quot;Delayed&quot;,&quot;On Time&quot;)' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Unique Carrier' datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
            <column-instance column='[Airline]' derivation='Attribute' name='[attr:Airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1678153835755048960]' derivation='None' name='[none:Calculation_1678153835755048960:nk]' pivot='key' type='nominal' />
            <column-instance column='[UniqueCarrier]' derivation='None' name='[none:UniqueCarrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <sort class='manual' column='[federated.15ggoa306oaaf716767ke191tnta].[none:UniqueCarrier:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;YV&quot;</bucket>
              <bucket>&quot;XE&quot;</bucket>
              <bucket>&quot;WN&quot;</bucket>
              <bucket>&quot;US&quot;</bucket>
              <bucket>&quot;UA&quot;</bucket>
              <bucket>&quot;OO&quot;</bucket>
              <bucket>&quot;OH&quot;</bucket>
              <bucket>&quot;NW&quot;</bucket>
              <bucket>&quot;MQ&quot;</bucket>
              <bucket>&quot;HA&quot;</bucket>
              <bucket>&quot;FL&quot;</bucket>
              <bucket>&quot;F9&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>&quot;DL&quot;</bucket>
              <bucket>&quot;CO&quot;</bucket>
              <bucket>&quot;B6&quot;</bucket>
              <bucket>&quot;AS&quot;</bucket>
              <bucket>&quot;AQ&quot;</bucket>
              <bucket>&quot;AA&quot;</bucket>
              <bucket>&quot;9E&quot;</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[pcto:cnt:Number of Records:qk]' scope='rows' value='Delayed Flights Percntage' />
            <format attr='subtitle' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[pcto:cnt:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[pcto:cnt:Number of Records:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]' />
              <tooltip column='[federated.15ggoa306oaaf716767ke191tnta].[attr:Airline:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15ggoa306oaaf716767ke191tnta].[pcto:cnt:Number of Records:qk]</rows>
        <cols>[federated.15ggoa306oaaf716767ke191tnta].[none:UniqueCarrier:nk]</cols>
        <percentages enabled='true' mode='column' />
      </table>
    </worksheet>
    <worksheet name='Delay DIstribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='2008 (1)' name='federated.15ggoa306oaaf716767ke191tnta' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15ggoa306oaaf716767ke191tnta'>
            <column caption='Origin Airport' datatype='string' name='[Airport Name &amp; City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Delayed' datatype='string' name='[Calculation_1678153835755048960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='iif(([DepDelay]&gt;0 OR [ArrDelay]&gt;0 ) AND (  NOT ISNULL([DepDelay]) AND  NOT ISNULL([ArrDelay])),&quot;Delayed&quot;,&quot;On Time&quot;)' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column-instance column='[Airport Name &amp; City]' derivation='Attribute' name='[attr:Airport Name &amp; City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1678153835755048960]' derivation='None' name='[none:Calculation_1678153835755048960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]'>
            <groupfilter function='member' level='[none:Calculation_1678153835755048960:nk]' member='&quot;Delayed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.15ggoa306oaaf716767ke191tnta].[sum:Number of Records:qk]' />
              <lod column='[federated.15ggoa306oaaf716767ke191tnta].[none:Origin:nk]' />
              <tooltip column='[federated.15ggoa306oaaf716767ke191tnta].[attr:Airport Name &amp; City:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15ggoa306oaaf716767ke191tnta].[Latitude (generated)]</rows>
        <cols>[federated.15ggoa306oaaf716767ke191tnta].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Delayed By Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='2008 (1)' name='federated.15ggoa306oaaf716767ke191tnta' />
          </datasources>
          <datasource-dependencies datasource='federated.15ggoa306oaaf716767ke191tnta'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Delayed' datatype='string' name='[Calculation_1678153835755048960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='iif(([DepDelay]&gt;0 OR [ArrDelay]&gt;0 ) AND (  NOT ISNULL([DepDelay]) AND  NOT ISNULL([ArrDelay])),&quot;Delayed&quot;,&quot;On Time&quot;)' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column datatype='date' name='[Month]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='Month' name='[mn:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1678153835755048960]' derivation='None' name='[none:Calculation_1678153835755048960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='Month-Trunc' name='[tmn:Month:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[tmn:Month:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[tmn:Month:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[tmn:Month:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]' />
              <tooltip column='[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]</rows>
        <cols>[federated.15ggoa306oaaf716767ke191tnta].[tmn:Month:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delayed By Month Table'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008 (1)' name='federated.15ggoa306oaaf716767ke191tnta' />
          </datasources>
          <datasource-dependencies datasource='federated.15ggoa306oaaf716767ke191tnta'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Delayed' datatype='string' name='[Calculation_1678153835755048960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='iif(([DepDelay]&gt;0 OR [ArrDelay]&gt;0 ) AND (  NOT ISNULL([DepDelay]) AND  NOT ISNULL([ArrDelay])),&quot;Delayed&quot;,&quot;On Time&quot;)' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column datatype='date' name='[Month]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Month]' derivation='Month' name='[mn:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1678153835755048960]' derivation='None' name='[none:Calculation_1678153835755048960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <sort class='natural' column='[federated.15ggoa306oaaf716767ke191tnta].[mn:Month:ok]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.15ggoa306oaaf716767ke191tnta].[pcto:sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15ggoa306oaaf716767ke191tnta].[mn:Month:ok]</rows>
        <cols>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</cols>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Delayed Destination'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Delayed Flights Top 10 Destinations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008 (1)' name='federated.15ggoa306oaaf716767ke191tnta' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15ggoa306oaaf716767ke191tnta'>
            <column caption='Dest AIrport' datatype='string' name='[Airport Name &amp; City (ورقة12)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Delayed' datatype='string' name='[Calculation_1678153835755048960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='iif(([DepDelay]&gt;0 OR [ArrDelay]&gt;0 ) AND (  NOT ISNULL([DepDelay]) AND  NOT ISNULL([ArrDelay])),&quot;Delayed&quot;,&quot;On Time&quot;)' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column datatype='string' name='[Dest]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Airport Name &amp; City (ورقة12)]' derivation='Attribute' name='[attr:Airport Name &amp; City (ورقة12):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1678153835755048960]' derivation='None' name='[none:Calculation_1678153835755048960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Dest]' derivation='None' name='[none:Dest:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]'>
            <groupfilter function='member' level='[none:Calculation_1678153835755048960:nk]' member='&quot;Delayed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15ggoa306oaaf716767ke191tnta].[none:Dest:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;ABE&quot;' function='range' level='[none:Dest:nk]' to='&quot;YUM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.15ggoa306oaaf716767ke191tnta].[none:Dest:nk]' direction='DESC' using='[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]' />
          <slices>
            <column>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</column>
            <column>[federated.15ggoa306oaaf716767ke191tnta].[none:Dest:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]' />
              <tooltip column='[federated.15ggoa306oaaf716767ke191tnta].[attr:Airport Name &amp; City (ورقة12):nk]' />
              <text column='[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]</rows>
        <cols>[federated.15ggoa306oaaf716767ke191tnta].[none:Dest:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delayed Origin'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Delayed Flights Top 10 Origins</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008 (1)' name='federated.15ggoa306oaaf716767ke191tnta' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15ggoa306oaaf716767ke191tnta'>
            <column caption='Origin Airport' datatype='string' name='[Airport Name &amp; City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Delayed' datatype='string' name='[Calculation_1678153835755048960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='iif(([DepDelay]&gt;0 OR [ArrDelay]&gt;0 ) AND (  NOT ISNULL([DepDelay]) AND  NOT ISNULL([ArrDelay])),&quot;Delayed&quot;,&quot;On Time&quot;)' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column-instance column='[Airport Name &amp; City]' derivation='Attribute' name='[attr:Airport Name &amp; City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1678153835755048960]' derivation='None' name='[none:Calculation_1678153835755048960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]'>
            <groupfilter function='member' level='[none:Calculation_1678153835755048960:nk]' member='&quot;Delayed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15ggoa306oaaf716767ke191tnta].[none:Origin:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;ABE&quot;' function='range' level='[none:Origin:nk]' to='&quot;YUM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.15ggoa306oaaf716767ke191tnta].[none:Origin:nk]' direction='DESC' using='[federated.15ggoa306oaaf716767ke191tnta].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</column>
            <column>[federated.15ggoa306oaaf716767ke191tnta].[none:Origin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]' />
              <tooltip column='[federated.15ggoa306oaaf716767ke191tnta].[attr:Airport Name &amp; City:nk]' />
              <text column='[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]</rows>
        <cols>[federated.15ggoa306oaaf716767ke191tnta].[none:Origin:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delayed Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='2008 (1)' name='federated.15ggoa306oaaf716767ke191tnta' />
          </datasources>
          <datasource-dependencies datasource='federated.15ggoa306oaaf716767ke191tnta'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Delayed' datatype='string' name='[Calculation_1678153835755048960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='iif(([DepDelay]&gt;0 OR [ArrDelay]&gt;0 ) AND (  NOT ISNULL([DepDelay]) AND  NOT ISNULL([ArrDelay])),&quot;Delayed&quot;,&quot;On Time&quot;)' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_1678153835755048960]' derivation='None' name='[none:Calculation_1678153835755048960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]' />
              <wedge-size column='[federated.15ggoa306oaaf716767ke191tnta].[pcto:sum:Number of Records:qk:2]' />
              <size column='[federated.15ggoa306oaaf716767ke191tnta].[pcto:sum:Number of Records:qk:2]' />
              <text column='[federated.15ggoa306oaaf716767ke191tnta].[pcto:sum:Number of Records:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <percentages enabled='true' mode='column' />
      </table>
    </worksheet>
    <worksheet name='Dep per Airport'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Flights Distribution in 2008</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008 (1)' name='federated.15ggoa306oaaf716767ke191tnta' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15ggoa306oaaf716767ke191tnta'>
            <column caption='Origin Airport' datatype='string' name='[Airport Name &amp; City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column-instance column='[Airport Name &amp; City]' derivation='Attribute' name='[attr:Airport Name &amp; City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]' included-values='in-range'>
            <min>2</min>
            <max>414513</max>
          </filter>
          <slices>
            <column>[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[Longitude (generated)]' field-type='quantitative' max='-6774357.6425746121' min='-15952867.079360474' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[Latitude (generated)]' field-type='quantitative' max='10061750.077166047' min='3441506.0365907098' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='1' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.15ggoa306oaaf716767ke191tnta].[attr:Airport Name &amp; City:nk]' />
              <text column='[federated.15ggoa306oaaf716767ke191tnta].[none:Origin:nk]' />
              <color column='[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]' />
              <lod column='[federated.15ggoa306oaaf716767ke191tnta].[none:Origin:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15ggoa306oaaf716767ke191tnta].[Latitude (generated)]</rows>
        <cols>[federated.15ggoa306oaaf716767ke191tnta].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Dist of delays arr &amp; dep'>
      <table>
        <view>
          <datasources>
            <datasource caption='2008 (1)' name='federated.15ggoa306oaaf716767ke191tnta' />
          </datasources>
          <datasource-dependencies datasource='federated.15ggoa306oaaf716767ke191tnta'>
            <column caption='Carrier' datatype='string' name='[Airline]' role='dimension' type='nominal' />
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Delayed' datatype='string' name='[Calculation_1678153835755048960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='iif(([DepDelay]&gt;0 OR [ArrDelay]&gt;0 ) AND (  NOT ISNULL([DepDelay]) AND  NOT ISNULL([ArrDelay])),&quot;Delayed&quot;,&quot;On Time&quot;)' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='Unique Carrier' datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
            <column-instance column='[Airline]' derivation='Attribute' name='[attr:Airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1678153835755048960]' derivation='None' name='[none:Calculation_1678153835755048960:nk]' pivot='key' type='nominal' />
            <column-instance column='[UniqueCarrier]' derivation='None' name='[none:UniqueCarrier:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]'>
            <groupfilter function='member' level='[none:Calculation_1678153835755048960:nk]' member='&quot;Delayed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15ggoa306oaaf716767ke191tnta].[none:UniqueCarrier:nk]' />
              <tooltip column='[federated.15ggoa306oaaf716767ke191tnta].[attr:Airline:nk]' />
              <text column='[federated.15ggoa306oaaf716767ke191tnta].[none:UniqueCarrier:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15ggoa306oaaf716767ke191tnta].[avg:DepDelay:qk]</rows>
        <cols>[federated.15ggoa306oaaf716767ke191tnta].[avg:ArrDelay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource caption='2008 (1)' name='federated.15ggoa306oaaf716767ke191tnta' />
          </datasources>
          <datasource-dependencies datasource='federated.15ggoa306oaaf716767ke191tnta'>
            <column caption='Max Delay' datatype='integer' name='[Calculation_1678153835797917709]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(Max(&#13;&#10;MAX([SecurityDelay],[NASDelay]),&#13;&#10;max([SecurityDelay],[CarrierDelay])),[LateAircraftDelay])' />
            </column>
            <column caption='Delay Type' datatype='string' name='[Calculation_1678153835799740430]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='iif(([Calculation_1678153835797917709]==0 or ISNULL([Calculation_1678153835797917709])),&apos;No Delay&apos;,iif([SecurityDelay]==[Calculation_1678153835797917709],&quot;Security Delay&quot;,&#13;&#10;iif([WeatherDelay]==[Calculation_1678153835797917709],&quot;Weather Delay&quot;,&#13;&#10;iif([CarrierDelay]==[Calculation_1678153835797917709],&quot;Carrier Delay&quot;,&#13;&#10;iif([LateAircraftDelay]==[Calculation_1678153835797917709],&quot;Late Aircraft Delay&quot;,&#13;&#10;iif([NASDelay]==[Calculation_1678153835797917709],&quot;NAS Delay&quot;,&#13;&#10;iif([SecurityDelay]==[Calculation_1678153835797917709],&quot;Security Delay&quot;,&quot;No Delay&quot;)&#13;&#10;)&#13;&#10;)&#13;&#10;))&#13;&#10;))' />
            </column>
            <column caption='Carrier Delay' datatype='integer' name='[CarrierDelay]' role='dimension' type='ordinal' />
            <column caption='Late Aircraft Delay' datatype='integer' name='[LateAircraftDelay]' role='dimension' type='ordinal' />
            <column caption='NAS Delay' datatype='integer' name='[NASDelay]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Security Delay' datatype='integer' name='[SecurityDelay]' role='dimension' type='ordinal' />
            <column caption='Weather Delay' datatype='integer' name='[WeatherDelay]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1678153835799740430]' derivation='None' name='[none:Calculation_1678153835799740430:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835799740430:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Carrier Delay&quot;' function='range' level='[none:Calculation_1678153835799740430:nk]' to='&quot;NAS Delay&quot;' />
              <groupfilter function='member' level='[none:Calculation_1678153835799740430:nk]' member='&quot;Security Delay&quot;' />
              <groupfilter function='member' level='[none:Calculation_1678153835799740430:nk]' member='&quot;Weather Delay&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835799740430:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Late Aircraft Delay&quot;</bucket>
              <bucket>&quot;NAS Delay&quot;</bucket>
              <bucket>&quot;Carrier Delay&quot;</bucket>
              <bucket>&quot;Security Delay&quot;</bucket>
              <bucket>&quot;Weather Delay&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835799740430:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.15ggoa306oaaf716767ke191tnta].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]</rows>
        <cols>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835799740430:nk]</cols>
        <percentages enabled='true' mode='table' />
      </table>
    </worksheet>
    <worksheet name='Sheet 13'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008 (1)' name='federated.15ggoa306oaaf716767ke191tnta' />
          </datasources>
          <datasource-dependencies datasource='federated.15ggoa306oaaf716767ke191tnta'>
            <column caption='Carrier' datatype='string' name='[Airline]' role='dimension' type='nominal' />
            <column caption='Max Delay' datatype='integer' name='[Calculation_1678153835797917709]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(Max(&#13;&#10;MAX([SecurityDelay],[NASDelay]),&#13;&#10;max([SecurityDelay],[CarrierDelay])),[LateAircraftDelay])' />
            </column>
            <column caption='Delay Type' datatype='string' name='[Calculation_1678153835799740430]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='iif(([Calculation_1678153835797917709]==0 or ISNULL([Calculation_1678153835797917709])),&apos;No Delay&apos;,iif([SecurityDelay]==[Calculation_1678153835797917709],&quot;Security Delay&quot;,&#13;&#10;iif([WeatherDelay]==[Calculation_1678153835797917709],&quot;Weather Delay&quot;,&#13;&#10;iif([CarrierDelay]==[Calculation_1678153835797917709],&quot;Carrier Delay&quot;,&#13;&#10;iif([LateAircraftDelay]==[Calculation_1678153835797917709],&quot;Late Aircraft Delay&quot;,&#13;&#10;iif([NASDelay]==[Calculation_1678153835797917709],&quot;NAS Delay&quot;,&#13;&#10;iif([SecurityDelay]==[Calculation_1678153835797917709],&quot;Security Delay&quot;,&quot;No Delay&quot;)&#13;&#10;)&#13;&#10;)&#13;&#10;))&#13;&#10;))' />
            </column>
            <column caption='Carrier Delay' datatype='integer' name='[CarrierDelay]' role='dimension' type='ordinal' />
            <column caption='Late Aircraft Delay' datatype='integer' name='[LateAircraftDelay]' role='dimension' type='ordinal' />
            <column caption='NAS Delay' datatype='integer' name='[NASDelay]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Security Delay' datatype='integer' name='[SecurityDelay]' role='dimension' type='ordinal' />
            <column caption='Unique Carrier' datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
            <column caption='Weather Delay' datatype='integer' name='[WeatherDelay]' role='dimension' type='ordinal' />
            <column-instance column='[Airline]' derivation='None' name='[none:Airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1678153835799740430]' derivation='None' name='[none:Calculation_1678153835799740430:nk]' pivot='key' type='nominal' />
            <column-instance column='[UniqueCarrier]' derivation='None' name='[none:UniqueCarrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835799740430:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835799740430:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Carrier Delay&quot;' function='range' level='[none:Calculation_1678153835799740430:nk]' to='&quot;NAS Delay&quot;' />
              <groupfilter function='member' level='[none:Calculation_1678153835799740430:nk]' member='&quot;Security Delay&quot;' />
              <groupfilter function='member' level='[none:Calculation_1678153835799740430:nk]' member='&quot;Weather Delay&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.15ggoa306oaaf716767ke191tnta].[none:UniqueCarrier:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;AQ&quot;</bucket>
              <bucket>&quot;HA&quot;</bucket>
              <bucket>&quot;F9&quot;</bucket>
              <bucket>&quot;9E&quot;</bucket>
              <bucket>&quot;OH&quot;</bucket>
              <bucket>&quot;B6&quot;</bucket>
              <bucket>&quot;YV&quot;</bucket>
              <bucket>&quot;FL&quot;</bucket>
              <bucket>&quot;EV&quot;</bucket>
              <bucket>&quot;CO&quot;</bucket>
              <bucket>&quot;NW&quot;</bucket>
              <bucket>&quot;US&quot;</bucket>
              <bucket>&quot;XE&quot;</bucket>
              <bucket>&quot;DL&quot;</bucket>
              <bucket>&quot;OO&quot;</bucket>
              <bucket>&quot;MQ&quot;</bucket>
              <bucket>&quot;UA&quot;</bucket>
              <bucket>&quot;WN&quot;</bucket>
              <bucket>&quot;AS&quot;</bucket>
              <bucket>&quot;AA&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.15ggoa306oaaf716767ke191tnta].[pcto:cnt:Number of Records:qk:5]' included-values='in-range'>
            <min>0.50700000000000001</min>
            <max>0.62059669302659959</max>
          </filter>
          <slices>
            <column>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835799740430:nk]</column>
            <column>[federated.15ggoa306oaaf716767ke191tnta].[pcto:cnt:Number of Records:qk:5]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.15ggoa306oaaf716767ke191tnta].[pcto:cnt:Number of Records:qk:3]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.15ggoa306oaaf716767ke191tnta].[pcto:cnt:Number of Records:qk:3]' />
              <text column='[federated.15ggoa306oaaf716767ke191tnta].[pcto:cnt:Number of Records:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15ggoa306oaaf716767ke191tnta].[none:UniqueCarrier:nk] / [federated.15ggoa306oaaf716767ke191tnta].[none:Airline:nk])</rows>
        <cols>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835799740430:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Carrier Delay dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='Carrier Delayed Percentage' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='7' name='Carrier Delayed' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8250' id='6' name='Carrier Delayed Percentage' pane-specification-id='0' param='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Carrier delay dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='71875' id='1' name='Carrier Delayed' w='49200' x='800' y='27125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='71875' id='7' name='Carrier Delayed Percentage' w='49200' x='50000' y='27125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='26125' id='8' name='Dist of delays arr &amp; dep' show-title='false' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8375' id='6' name='Carrier Delayed' pane-specification-id='0' param='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]' type='color' w='14000' x='34200' y='29625'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Carrier delay reasons dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='Carrier Delayed' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='71750' id='7' name='Sheet 13' w='41200' x='42000' y='27250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='26250' id='9' name='Delayed Pie' show-title='false' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8250' id='6' name='Carrier Delayed' pane-specification-id='0' param='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Delayed Airports'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
                <zone h='49000' id='1' name='Delay DIstribution' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='6' name='Arrival &amp; Departute Delay' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='7' name='Delayed Origin' w='24600' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='12' name='Delayed Destination' w='24600' x='74600' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Delayed Flights' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2008 Delayed Flights&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='444' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97298' id='1' param='vert' removable='false' type='layout-flow' w='98650' x='675' y='1351'>
            <zone h='5574' id='3' type='title' w='98650' x='675' y='1351' />
            <zone fixed-size='132' h='22297' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98650' x='675' y='6925' />
            <zone h='69427' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98650' x='675' y='29222'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='This map shows flights distribution in 2008.Its clear that we have  busy airports like ATL(Hartsfield–Jackson Atlanta International Airport) &amp; ORD(O&apos;Hare International Airport).' captured-sheet='Dep per Airport' id='1'>
                    <capturedDeltas>
                      <worksheet name='Dep per Airport'>
                        <filter class='quantitative' column='[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]' included-values='all' />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Looking at delayed flights per airport.Its clear that more flights means more delays &amp; there is positive strong relationship between arrival delay and departure delay.' captured-sheet='Delayed Airports' id='2'>
                    <capturedDeltas>
                      <worksheet name='Delayed Destination'>
                        <selection-collection />
                      </worksheet>
                      <worksheet name='Delayed Origin'>
                        <highlight field='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]'>
                          <color-one-way>
                            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</field>
                          </color-one-way>
                          <bucket-selection>
                            <bucket>&quot;Delayed&quot;</bucket>
                          </bucket-selection>
                        </highlight>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='9 carriers out of 20 have more than 50 % chance of having delayed flights.' captured-sheet='Carrier delay dashboard 2' id='3' />
                  <story-point caption='It seems that some months like March ,June &amp; Decmebr have the highest number of delays and it reasonable  because of the holidays and school breaks' captured-sheet='Month delays dashboard' id='4'>
                    <capturedDeltas>
                      <worksheet name='Delayed By Month Table'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Having so many delays , I was curios about the types.Late aircrafe NAS &amp; carrier delays are mostly the reasosns for delay.' captured-sheet='Sheet 12' id='5' />
                  <story-point caption='The conclusion is carriers like AQ ,HA &amp; YV are late because of internal carrier reasons .WN in the other hand have a lot of issues with late aircraft regardlees of the airport. I believe thos issues should be fixed by carriers.' captured-sheet='Carrier delay reasons dashboard' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Month delays dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='2008 (1)' name='federated.15ggoa306oaaf716767ke191tnta' />
      </datasources>
      <datasource-dependencies datasource='federated.15ggoa306oaaf716767ke191tnta'>
        <column datatype='date' name='[Month]' role='dimension' type='quantitative' />
        <column-instance column='[Month]' derivation='Month' name='[mn:Month:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='10' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' param='horz' type='layout-flow' w='76700' x='800' y='1000'>
              <zone h='98000' id='3' type='layout-basic' w='76700' x='800' y='1000'>
                <zone h='98000' id='8' name='Delayed By Month' w='76700' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='217' h='98000' id='9' is-fixed='true' param='vert' type='layout-flow' w='21700' x='77500' y='1000'>
              <zone h='8250' id='12' name='Delayed By Month' pane-specification-id='0' param='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]' type='color' w='21700' x='77500' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35500' id='13' name='Delayed By Month Table' w='21700' x='77500' y='9250'>
                <layout-cache fixed-size-h='276' fixed-size-w='202' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8125' id='11' mode='dropdown' name='Delayed By Month' param='[federated.15ggoa306oaaf716767ke191tnta].[mn:Month:ok]' type='filter' w='16800' x='57100' y='875'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Top delayed airports'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='1' name='Delayed Origin' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='8' name='Delayed Destination' w='98400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Dep per Airport'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]' show-domain='false' show-null-ctrls='false' show-title='false' type='filter' />
            <card pane-specification-id='0' param='[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Airport Name &amp; City:nk]</field>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Origin:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Arr per Airport'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Airport Name &amp; City (ورقة12):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delayed Origin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.15ggoa306oaaf716767ke191tnta].[none:Origin:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Airport Name &amp; City:nk]</field>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Origin:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delayed Destination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.15ggoa306oaaf716767ke191tnta].[none:Dest:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]'>
          <color-one-way>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Airport Name &amp; City (ورقة12):nk]</field>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</field>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Dest:nk]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;Delayed&quot;</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Carrier Delayed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Airline:nk]</field>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Carrier Delayed Percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Airline:nk]</field>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delayed By Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[mn:Month:ok]</field>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delayed By Month Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[Delayed Set]</field>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</field>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835799740430:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15ggoa306oaaf716767ke191tnta].[pcto:cnt:Number of Records:qk:3]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Airline:nk]</field>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[pcto:cnt:Number of Records:qk:3]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Delayed Flights'>
      <viewpoints />
      <active id='4' />
    </window>
    <window class='dashboard' name='Top delayed airports'>
      <viewpoints>
        <viewpoint name='Delayed Destination'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Delayed Origin'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Carrier Delay dashboard'>
      <viewpoints>
        <viewpoint name='Carrier Delayed'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Carrier Delayed Percentage'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Carrier delay dashboard 2'>
      <viewpoints>
        <viewpoint name='Carrier Delayed'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Carrier Delayed Percentage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Dist of delays arr &amp; dep'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
    <window class='dashboard' name='Month delays dashboard'>
      <viewpoints>
        <viewpoint name='Delayed By Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Delayed By Month Table'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <fields>
                    <field>[federated.15ggoa306oaaf716767ke191tnta].[mn:Month:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>3</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='11' />
    </window>
    <window class='dashboard' name='Carrier delay reasons dashboard'>
      <viewpoints>
        <viewpoint name='Carrier Delayed'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Delayed Pie' />
        <viewpoint name='Sheet 13' />
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='Delayed Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</field>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay DIstribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15ggoa306oaaf716767ke191tnta].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Airport Name &amp; City:nk]</field>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Arrival &amp; Departute Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.15ggoa306oaaf716767ke191tnta].[none:DepDelay:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Delayed Airports'>
      <viewpoints>
        <viewpoint name='Arrival &amp; Departute Delay'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Delay DIstribution'>
          <zoom type='entire-view' />
          <highlight field='[federated.15ggoa306oaaf716767ke191tnta].[sum:Number of Records:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Delayed Destination'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Dest:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.15ggoa306oaaf716767ke191tnta].[cnt:Number of Records:qk]</field>
                    <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</field>
                    <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Dest:nk]</field>
                    <field>[federated.15ggoa306oaaf716767ke191tnta].[attr:Airport Name &amp; City (ورقة12):nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>80134</value>
                  <value>&quot;Delayed&quot;</value>
                  <value>&quot;SFO&quot;</value>
                  <value>&quot;San Francisco International Airport&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Delayed Origin'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Dist of delays arr &amp; dep'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Airline:nk]</field>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:Calculation_1678153835755048960:nk]</field>
            <field>[federated.15ggoa306oaaf716767ke191tnta].[none:UniqueCarrier:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Arr per Airport' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Arrival &amp; Departute Delay' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Carrier Delay dashboard' width='192'>
      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
      3Pj1UzYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Carrier Delayed' width='192'>
      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
      KAqjVuYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Carrier Delayed Percentage' width='192'>
      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
      +Dq6+f+jlTznSaE13gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Carrier delay dashboard 2' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Carrier delay reasons dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay DIstribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delayed Airports' width='192'>
      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
      AQOD1SIkEAbYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Delayed By Month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delayed By Month Table' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Delayed Destination' width='192'>
      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
      zU9qUgIlSo2IhldYKRFlzBpaDScLEAmHb6qhZR8iyth9AIiJn81Pf3VtX+OXr1953FBeQsbi
      LNJjjaTPfokVwFN5f7junVkA0ZfxdTLT4jl06CgdrmF2bsvj4Icf4Viy5ep7bYz0VFLYFOCn
      W2dxsOjQrYZJ1e4nArPZPNrujfW0GyZ1rPavPKlJCYxRapjM2g0nazKZxqxh1HDIWrPFclMN
      s1m7LWGTyRh9WUSxdN3DmtVfsm4HS9YM8bcvThEIGnn1rbf583t/x2LZhOrtZ+76p/hp7D6O
      nbvI7GW7ZB9A3B3Nre1cvFyjSVuPbt1IfFzsmM8N9zby2ZFydj/7LJGui7y7v5x1237AiX2f
      krV+G6VHP8YbM4eXn9nOuSNfSQDE3dHT209xaYUmbW1anxc1ACkLV/L6r65eHZeykTeWbwRV
      wZ3xBI4kBwtf+eXoax956kUJgJg5hv0jUfcTjCYTQ2Mc6pUAiBnjy2+Ocrl6YuciyclwQtck
      AELXJABC1yQAQtckAELXJABC1yQAQtckAELXJABC1yQAQtckAELXJABC1yQAQtckAELXJABC
      1yQAQtckAELXJABC1yQAQtckAELXJABC1yQAQtckAELXJABC1yQAQtckAELXJABC1yQAQtck
      AELXJABC1yQAQtckAELXoo4SqenIhMqdHSUS7vwokdFGotRyPilRRlhUtVwWkZuXRUTRcKRL
      5c7Pp+ifp4nXuGmUSIPBMPpYK9e3e+P/a1Yi+vRqVcMwdg2DZgWAKPNJS2MtCy37YLgL8yna
      52kyC/umIZJMV4fk1HJBGA3G0XZvpN2nc+z2tWOIUsNg1HI+Rauh3Zaq0XjzsjBq2L4hah/u
      /OdpMp9Z2QcQuiYBELomARC6JgEQuiYBELomARC6JgEQuiYBELomARC6JgEQuiYBELomARC6
      JgEQuiYBELomARC6JgEQuiYBELomARC6JgEQuiYBELomARC6JgEQuiYBELomARC6JgEQuiYB
      ELomARC6JgEQuiYBELomARC6JgEQuiYBELomARC6JgEQuiYBELomARC6dtMwqaFQCIDU5CTW
      5eXe+t0qtzXOndlsGm33eg9kzcNut065ht1mHbN9gLyVywhFG0J1AjXmz8kYs4bNGjP+fLrN
      GkmOhDFrzE5L0WxZGOCmGmazUbM+pKUkjdmHe/XzZFCvG6w3FAphsVjGn4KrFEW5xZCVY5tM
      jYmMYhiJRDAYDBN6z0RrTLQPqqqiquodrTHRZaGqKpFIBLP5poFCo77+XuvDZGtc34fb630U
      Wg6vOZNrTHShTob0YXI1blgDqKp6xzt5p2t83507XUPm0+3VuNfnk+mdd9555/s/bqehnoYK
      mr1mEhii6EQBlxo6sMeAJxyDI3b8VdGtaoQDXkqLz1Lf0o4jPYPG8iIqa5sJGGMJ9dRTfLEG
      lzdM5qyUqJuKt/6mGqG4oJAGZxvmuGRGOmo5U1GFL6ji83hJNPk4U9XD/CSV5t4IyQljb0/e
      ej5FuFhcRHVDMyFzHDHeLk6VXqDb5SPF6KWkcZD5s2w01HeSkuqI2sp4y2LE1YpLcRAXA8Eh
      F8UXa5mbkUZDfRMJiXE0t7STlJREtGbG+0bvqq/gzIUq+jwBLMYQZpMdf383A0E/7W0uHDFB
      nP1BkhPsk+5D2N1KV8hBghVCwx5Kyi6RkZlJf2stpRcu41VimJWccMs2xqvh6+nBazJhjfg4
      WVzJwgWZdHa0Y7fH4+lom9hRIFWN0OONEBjoxpY4iw2rssleuYH5SRa8I+PsaN6GgY5m0peu
      Z2PegzibWjDFp7Ft60b8fd1EwjFs2PYIc81unIORSVaIkDg7hy2b8ulpaSIQNJK7YQNLFs7B
      MzRIe4cbEz56u1zExE1261DFnJjBI1s3M9LVjMcbZnF+PmuWL8akjuDzDNDvHcEz6Jtk+1d7
      EvDiD1+p19/fgzEQwqsYSY+D4uJSbCmzmNLg7AYL67ZsIynkpX/Yi9frw+N24w9bsEb6OHPJ
      Seas6AG+HWrQy/DVfVmPqwsiBjwjQXq7elmwdCU5c9Om1D5A2O8noCi4evtJsYzQ5lUY9g3h
      8/kYdA1MLACRETcdXQP0tbXijajjv2GiExsKY7VZMVtsqGqIwe5mDnxzEEvq7CsTajAQFxtD
      IDjZAFxhMlsxGyKEQz6qL12io99LoilMx4hCtsNEbb+fFNs4RxPGYTCYsJoNhJUQDZWV1DS0
      EFENZGcvxNncMqW2r6eqCi1NrcTZPFTWu7AlJDDsGybOdvs7hmMJ+AY4e+okbks8cWE/tVWV
      1DQ4CasQG2slGAbLlBJ2o8b6FuKsPqob+1iat5bhrkYqajSaT6pCu7OZiM1CU2UDBH1UVVZS
      19Q2sZ1gV6uTWTlLSIl00ugcZMl1a7/aimKGuueRn79s0nvWyRkZFBUdpdJoYPGqjQybYHlu
      Mk3dbvwjLioKCogxxbLl4ZhJVoDOxst0ddWRvmAZtqCbvNXLcAA94TaanUbiFjrw1DUSY5n8
      Dpm7s5GC7lZiU+eTY/bj9/vxxwRBNWGOTSap7zKN4fRJtw+ghIKcP1PAYFYmqsVBSsYcPM56
      agOxbNqcT11NPWtWLZ30WsAal8zGpctIjoGWlgZW5y8l0NfGYHiItgETaxclUut0sSwrddJ9
      UJUIZWcLGM6ZQ9AYz5zZ8/E423HW9dAz4MWadOvNn9ulhIP4jXbmp2Yy3NJB2JrE2nU5uBrr
      +H/yfdMdMyXxxAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Delayed Flights' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Delayed Origin' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAUw0lEQVR4nO3daXRT553H8a9Wy5ZtecMLYGzANjY7hrDHQEgCCaTZtyZpM6dt2un0RefN
      nHnZc+bVnDNzembOvJk5s51OmqZLoFnKEvY9NgVsMGAbb/K+SbZk7dLVnRdO3VBwMLbAwc//
      8+pey3qe+0j66T73Srp/g67rOkIoyjjTGyDETJIACKXdFgBN02ZqO4SYEbcFIB6Pz9R2CDEj
      ZAoklCYBEEozf3VF13UikchMbYsQD91tATAYDFgslpnaFiEeOpkCCaVJAITSJABCaeaJbvD0
      NrPv0yM4itewdr6RQ6cuMX/ZZvZUraLx4gHatSXs2rgYLRrg2Kf7aXXFefmtb5NtdPHf/3ec
      N17fzsf7PiWclMurL+0lLcn0MMclxKRMvAewpPHad97FNNpN6tylvPP2K/S0NhDx9HCtvxdX
      29CX/2hg9ePPsndVGg29Yc4ePUVYCxNPcvDC62+TbxllyBN6OKMR4j5NGIC0NDvnjx9h2cYd
      pFnD/P7X+3Dkz+XUkSMUzCvEPewiGgej2cpw13WatMWU00B7KBVr2IMvauDy8f30BJJITZ5w
      RyPEjJowADUHfk3zcJTGxkZu1NWSnD2HzrZ28osW4hvoYdA1RG+Hk4GBVvZ/dg7vQBt9QSt5
      aUZ6+vppa7zKUNiG7nMx5A8+zDEJMWmGr/4eIBqNjn8OEBwdwe31Y7TYyLBbGPb4SHVkkW63
      ATECgSg1Z09TWbWNgMuFhoHMnFxSksyEAgEsVjOuIRdYksnJcmA0GGZqjEJMaMIACKGCCSfn
      /YMu2pxdCelk1fJykm1JCWlLiESaMADOzm4+O3wiIZ2ULFwgARDfSPJBmFCaBEAoTQIglCYB
      EEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoE
      QChNAiCUNoNXrIpz4+JpzjSO8MO39nDs97+hoc9P1TMvYu65yNEr7Wzb+yYrizLRAwP85//8
      mtTCZexYlsP+w2eJ2ufy5hOLeP+Dz8kpX8s7z++YuaGIR9YMBsBA6arNdLhPQMxLr8/GrqpS
      LtReQRvsYe/eveTmpwFw7fxZijc9xYoFeWQ77PzVuwv57PBJPK4+lm7cxfrKkpkbhnikzeAU
      yIDFasUAYMlm5+Yymm614Qv5ifi81NddYN/B8wAEYhrDHU3s/+gj+l2DnDpxjo1V28krKEXz
      OfnV+7/FP3MDEY+wO/YA49fJSmD9eB2dOwvSa3xx+GMOHjqDR0+j0NBNw61Otr74DpGGIFfa
      eilcXs7VS5eoWL2Smt8eIWa003buIGdaArT0jbK9Mpe2dicx6xwsup7ITRaKuO3KcJFIBMOX
      lzD8Y+11/vD5yYR08pPvv0V2VsZ930/Xg1TXNLJxw+qEbIcQf2nCGmEmU+JmR2azeYqXXLTw
      +NbHErYdQvylGb1u+R9r6+ntG5h2O8k2G09u35yALRKqmdEA3Gpxcr3h1rTbcaSnSQDElMgH
      YUJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqT
      AAilSQCE0iQAQmkSAKE0CYBQ2oz+JvjBC3P4w/cZTKvgrV1r+fd/+UfiyTk8uedFTn7yAQHN
      yDOv/5Al+UmcO/QRdW399PiTeadqPge+uEVl1R5sA3+kpqmbnJItvPHM+rELeYlZY5YHIIld
      33qBw5faiGsaEcysWL2Zualx0rLzybECccBgYsszr1F28zQ39TLqzu+jtLycBQVZFK9+lcLF
      V7gxYJ3pwYgHQJkpkNFi5cWXXiPDf41Pq9tJcRQwd04KLpcXAF2PcOHmCBvLs7HY7BQXz+P0
      oSM0Xq+mzZPMtg3L5N1/Fprle4BRfvf+r6jtGcaeZqWz5jyDgQhPv1xMzcHf0xUz8eSuUU5W
      j/BYkYW88pVYjRYqV5Xwh2MnKFiygcvnjjOipTLkCfDcE2vVecdQxCwPQBqvvPcTXvnT6uqV
      47eUv/c3AIz0ObE7MrHnpLMhf+y2ohVb+PGKLWMrO9c9vM0VD90sD8C9ZeQXcf9XLRWzxawP
      wPu/+YRIJDLtdkoXF/P4JtkbzDazPgDtnd2EQuFpt5PhSE/A1ohvGjmmE0qTAAilSQCE0iQA
      Qmm3HQTruj5+xkTTtIR1Eo1F73omJh6PJ6T9r273nTcmpAvi8XhCziaJb5avKZFkSlgnFrMF
      q/XO79IYjYnZARkMhru2P3ZjQrrAaDRO3Id4ZMkUSChNAiCUJgEQSpv1nwQ/aNGQhy8+/5SM
      x16j2NTNvo8/JymvlBf37MDXc41jtV5eeW4rRuDcwQ+pa3Oz5ZnX8Tce41pnkD2vvEzD8X00
      DoZ46vk3KStIm+khKUX2ANOk6waWzEunx6tjTcvltbffJmnUiTsQ40LNBUZcnvETUQOhJH78
      4x+zsthOU2+M154o5vLVNnzWefz1j96TF/8MkABMkzU5ndzsse8JJSVbOPH7D/Ga59Bb8yla
      /nJivmHCsbHTvanaMP/683/i+JVO0g0j/PLAFfKzHRh8Tv7t5//MhYb+mRyKkmQKNE0BTy/n
      TnzBRT1EQSCLWGouod5eQvMqMA134uzowOUexGMEozWHwgIDwaAb14jOgsJ0nJ0DONIczAOC
      /uBMD0c5EoBpstjSWbLjDUqNJrIzM8jKzsO6uYo5WQ4Mhjg7doRxXj2DtbSK9Y9vYsQfI78g
      j9DSRQz7YxQU5OEfLmQ0AnML8mZ6OMqRAEyTJcnOgmL7+Hpa2lfn8Ubs9mSWbnr6y3UbaZlf
      3i9zzvhyRk6e/ChnhkgApskfCHKjoTkhbS0qLiQ7S6LwMEkApmnE4+Xjg8cS0tarz++WADxk
      chZIKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAnAIyAeC1J3+TKBKMTCPi5dqSOq6QRH+jj0
      h89o7hke+0c9TuPlc5yrvYUWGuXUkQOcqq4npsdpvVFHz7B/ZgfyDSQBeAT0tzfT3dHMgB/6
      nG00tDQTCmt0dXSxuKKCC6dPAeDpu0Wt00eg4RR1vQHmLirH33WZ1qYWrnf20dkp3zb9S/JJ
      8COgoGQFXlcPAPPLVrCwb+yFXLJ0GRfPnqNizVoARiOjlC1exYI0O9e9JnzOszQPGdhctJjs
      NGhzzdgQvrEkAI+AeDyOFo+jaRrxOGPL8Th11WdIW1RJ2bws4vE4dnMKF3vaiERaMJUvorzq
      JUzVB2jrdDHPpqFpY5eQMRhuv1RGyDfAwQ/+l/StP6BqXoD/+sVv0ZILeG33Mj746ASkZPO9
      77xOapKJgx/+B23uGI/t3EvHuU/p8cFTL7/JzWMf0uUOsGHv91hfkjlDj9T9kwA8AtqvnuXM
      1Q5oP8S2Ehs3GttoG9RYkqtRffAjri9YisHdyVNvvEZR82EG0irZnm/ks09+hym3jKccPj78
      +DRa3EJ+USFFmbbb2rel5vLinu0cHoZbzc1se+5t9P4a6mu7mb+yEjyDaLE4JJlwB+Ns3baT
      koVW6k9msnVDOtXn6kmxprN+XREBjw+QAIgEWrS6ih+urhpfL39s5/jyhm0AGh5PgDSTmcpt
      e8Zve+Xtd8eXv/+D9ybXmQEMGNAxEMGIRYviC4YIa2O/atuyaSPtzhv8obuQ3U9X0tZcS9SQ
      itlkIRjRiBC4a7O6FuZydQ0llY9jx8vnBw6zZMtu5hgHOXjoHI5Fq9i9ZSVaLMjZzw/iMubx
      /K4NXDt3HKc/hWee3MTVM4fpi2fx9PYNWI2JueCTBOAREAqHCQbvfYn3kRHvPf/HkZ56xwXJ
      Ap4OfvPLT7kRzePdl3Zy/ONfoKfks7dqMfsPX0Qz2oh62qjtS6an9iot/W6WPb6Km7VnuNwy
      wgtvP0XNJ1fo7o2zrKryrv0Odbbg8/TTPQq+moPkrlzPycOH2FCWypL1T1O6YOxbsPG4xsJl
      G3DUH+JYXTF5WUXMp4ErF29iya8gvb0OZ7+H0oLEfGtWAvAIqLl8jc+Pn01IW3//0/dItafc
      9rcUxwLe/bt/GF9fWlExvvzTJesB6Lh+iYKFZawu+86f71i5iCe+XCx572+/tt85xUtZ5O5k
      FBjS7ewqWUhXfR2GSIijh35H2/INvLhzHRZrCoPNRzjZGOGdJ+ei996kttvB5qqleDvrGUya
      w/zsxNVqkNOgYlIWLFtLXsrUXy6xSJBRXwCfz0c2fi41teAajZKaX847336FoZZ6QpEIQa+L
      zNJNPLsuk/OnL3Huei/rHluDcaSRcw1e1q1egTlxV+2UPYAAn8/PgaOnE9JW5apllCxccMff
      B503udIZANd5XnhqF2eOHmfn7t1k6kMcOX6CbXuf5/RnH7Ni+xO01J3CZ57Hzo3zOHq4kUMH
      j7C2chn4nBw60M+O555lbnpyQrZXAiAIR6Jcvd6YkLaKCufeNQAFpZW8Vfrn44PdL7z05VIa
      L7++EIgz9+lnsafaKXhuvK4nL73x1vhy+ZI/T80SRQIgHopgMITXd++vYviDoXv+T3ZmBuYE
      zYMkAOKhuHaziU8OHk9IWz/90XfJyU7MZw1yECyUJgEQs0os4OLEsRP0DvuJBEY4e+IYt7r+
      9CUoHVfXLY4dP08gGuH6pfNSImmyJiqRFIvFEtMBENNid+0joc9F9M7nIhqLJqx9TdMe+Bhi
      E7yeAI4dOEhuyVKOfX6UtWV5JGVkc/LoEYq+/RJ63Mfv9h9j07Yq+pyXqXeGpETSZE1UIsls
      TtxhlNlkvmsfCX0uLHc+FxazJWHtm0ymBz4G8wSvJ4DC3AxOXrhIt8vHyy/sprmumopVa7Ba
      rWjuVroGI5y/8AU7nt7KSFe1HASL2aVk3ROUrBnll/tO03n1CyLZ5WxZNHbNVUPqXJZUlLNn
      dZwjnRa++96PJABidvEPNLPvWB1PP/8Co41nqD78EXW5JZQkeynavJcNZVb2X/Hy6rdyOLzv
      fQmAmF2yi1fyg++tHFvJeZblWwA9zvCIl4xMG4a12ykd+/0Qz3/7exIAMXuEwmFisbsfbFus
      Vvz+O7+qLQEQs8b+z45yveHWfd1HPgcQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYB
      EEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoE
      QChNAiCUJgEQSpMACKVJAITSJABCaRIAoTSpETZJUiNscmayRthUXk9SI2ySpEbY5MxkjbCp
      vJ5kCiSUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkS
      AKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJ
      AITSJABCaRIAoTQJgFCaBEAoTQIglHZHiaRodKxcTnZmBuvWLP/6e+tMqgKL2Wwab/erFhXP
      Jzk5adp9JNuS7to+wJoVFUTvVcZoEn0Uzs2/ax+2JOu9H6dJ9pHhSLtrH3k5WQl7LgxwRx9m
      szFhY8jJyrjrGL6pryeDruvjVbSi0eh4iaTJiMfjGAwGDIbJ1yGaSh/3U/pG0zQMBsN93ed+
      +7jfMei6jq7rD7SP+30udF1H07RJl3j6Jo5hqn18dQzTKnCVqBpfs72P+31Sp0LGMLU+btsD
      6Lr+wAf5oPv403AedB/yOE2uj2/642T62c9+9rM/rUymoYGWq7T7zKQxyvlTJ6lv6SHZCt6Y
      FUfKvXdFX9dHLOzjUvUXNDu7cczJp7XuPDea2gkbU4gONFN9rRG3L0ZBbtaEU8Wvf6cKUX3y
      LC0dXZjtmYR6mrhw9Sb+iI7f6yPd5OfCzQEKM3TaBzUy0+4+n/z6x0njWvV5GlraiZrtWH19
      nLlUS7/bT5bRR02rh8JcGy3NvWRlOyZs5V7PRcjdiTvuwG6FyKib6mtNzMvPoaW5jbR0O+3O
      bjIyMpiomcm8o3d3dpLqcNDXeoVur42cDOjs9OBwWGltcuLIzvzaKfu92r9ac4qbTW2EzakE
      vG4cDge9TbfwaUFGw0bCw72EDMkkWyeeqNyrj4HeTkzJDsxG8PW0UdvtYV6Og6arNVxvaL2/
      s0C6rjHg0wgP92NLz2X9yoUsXLGewgwLvtD06+UO97Qzp/wxNq5ZQkebE1NqDtse30hwqB8t
      ZmX9tirmmUfo8Ey15qxGet5itm6qZMDZRjhiZPn69ZQVzcU76qG7ZwQTfgb73FjtU50d6pjT
      86l6fDOhvna8vhillZWsXlqKSQ/h9w7j8oXwevxTbP/LkYR9BGNj/blcAxjDUXxxI3PsUF19
      CVtWLsZpvvn6fT50PYrbZ8Y/3IWOxojbQyAQwD3smXYJZmt6LtuqNhEY7GfUM9bu8JCb5Jw5
      9LXU0zkUJMM+QfnbSQoGfMR1AJ22QS/2sIewrjHgCrB8zZr7C4AWGqGnb5ihrk58WoIqUH9F
      LBojyZaE2WJD16N4+ts5eOAwluy8sQ01GLCnWAlHpld02WROwmzQiEX9NNTX0+PykW6K0ROK
      s9BhoskVJMt2j7MJ92AwmEgyG4jFo7TcuEFjixNNN7BwYREd7c5ptf1Vuh7H2daJ3eblRrMb
      W1oaAX8Auy0xtX8jo256h4YZ7unGG9Nx9zmpr7/O0Ghw2m0P97Zy6swXpOTkERkdor6+Hmef
      GwwWbMYocUtKwqZQetRHf7+LUc8gvUMR1q5bSeuNK/d3EOzu7CB3cRlZWi+tHR7Kkv98W9PV
      akb751NZWTHlI+vM/HzOnz/GDaOB0pUbCZhg6fJM2vpHCIbcXD15Eqspha1bpv6u0Nt6nb6+
      W8xZUIEtMsKaVRU4gIFYF+0dRuxFDry3WrFapn5ANtLbysn+TlKyC1lsDhIMBglaI6CbMKdk
      kjF0ndbYnCm3DxCPRrh84SSe4gJ0i4Os/Ll4O5ppCqewaXMltxqbWb2yfNp7gZGBXubMLyJd
      d9PV4SZ3QRkVFXnU/vHm9BoGMgsWUV5eAcBNfz5rKsppMV5ipM+JNa8Cm7eLQW8uuem2KfcR
      9g5x9vRp8rPTyZo7jxybxpCrB7e7G18owv8D539FkrGE95sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='164' name='Delayed Pie' width='164'>
      iVBORw0KGgoAAAANSUhEUgAAAKQAAACkCAYAAAAZtYVBAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAANtUlEQVR4nO2df3RU1Z3APxOYYAKdGQiiNpEQqAoZQBtOtoiFVnpOgEVaXAhdoIis9Qeg
      B2kLrYZTQw9DBdwT3C6gXajgKlRHWkCrS3RxVQQ1lR9igrJHCDEDSAPMvEoCGTKvf0wmjjBJ
      ZvLr3ffm+zlnzgl5b25uwud87/3ed793bLqu6wiCIqQY3QFBiEaEFJRChBSUQoQUlEKEFJRC
      hBSUQoQUlEKEFJRChBSUQoQUlEKEFJRChBSUQoQUlEKEFJRChBSUQoQUlEKEFJRChBSUQoQU
      lEKEFJRChBSUQoQUlEKEFJRChBSUQoQUlEKEFJRChBSUQoQUlEKEFJRChBSUQoQUlEKEFJRC
      hBSUQoQUlEKEFJRChBSUQoQUlEKEFJRChBSUQoQUlEKEFJRChBSUQoQUlEKEFJRChBSUQoQU
      lEKEFJSiu9EdMDMhzYeunSCk+QBo+Lys8fsn0DUfIe0ET9t/Rm+XA5fTQW+nAwCXK/x1TnaW
      YX1XFREyQUKaj4bqMoLl22moLmv1fn9Awx/Qmr2ek51FTv8sxo4Z2ZHdNC02Xdd1ozuhOiHN
      1yRgPBJGs6L2p3Hf63I6yBueG5Y0SaOnCNkCwYpt1O9dS0g70eY2EhEyGpfTwdgxI8kbntvm
      n21GRMgYhDQfF3YuSTgaxqKtQkZwOR1MmVSQNBFThIwipPmo37uWYMX2DmuzvUJGyMnO4l8m
      FTQlRlZFhOSrOWL9e2s7vO2OEjLC2NEjLZ0AJb2QIc1HnXdOu+aJLdHRQoK1h/GkXhi/uHct
      5zeM6zQZOwt/QGPDcy+x76MKo7vS4SSlkCHNx8W9aztliO5K/vRyKVtfLjW6Gx1K0gkZSVzM
      LmOE/R9VsOG5l4zuRoeRVEJG5osdmUWrwLHj1Tzxn3/g2PFqo7vSbpJGyM5OXozGH9AsMXwn
      hZCRhW6ryhghkuyYmaQQMt6NEFbg2PFqdr39ntHdaDOWFzJYsc0yCUy87HrnPdPOJy0tZGSo
      TkY2PPeSKaW0rJCRJCaZ2fpyKeda2IupIpYVsr3bxqyAP6CZbj5pSSFDms9ya41tZf9HFaYa
      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
      xT8A4RJhgaavg9sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dep per Airport' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dist of delays arr &amp; dep' width='192'>
      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
      nrDLGnSmyQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Month delays dashboard' width='192'>
      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
      GQK1PzG0cfUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Sheet 13' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top delayed airports' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
